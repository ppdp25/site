        The 27th International Symposium on Principles 
           and Practice of Declarative Programming


September 10-11, 2025 
University of Calabria, Rende, Italy
https://ppdp25.github.io/site/

Collocated with ICLP 2025.
https://iclp25.demacs.unical.it/

# Important dates

- Title and abstract registration: 18 May 2025 (AoE)
- Paper submission: 30 May 2025 (AoE)
- Author notification: 7 July 2025
- Final paper version: 21 July 2025

# Overview

The PPDP 2025 symposium brings together researchers from the declarative
programming communities, including those working in the functional, logic,
answer-set, and constraint handling programming paradigms. The goal is to
stimulate research in the use of logical formalisms and methods for analyzing,
performing, specifying, and reasoning about computations, including mechanisms
for concurrency, security, static analysis, and verification.

PPDP 25 will be held at University of Calabria, Rende, Italy, as part of ICLP
2025 (https://iclp25.demacs.unical.it/). At least one of the authors of an
accepted paper is expected to attend the conference and present the paper.

Submissions are invited on all topics related to declarative programming, from
principles to practice, from foundations to applications. Topics of interest
include, but are not limited to:

- Language Design: domain-specific languages; interoperability; concurrency,
  parallelism and distribution; modules; functional languages; reactive
  languages; languages with objects; languages for quantum computing; languages
  inspired by biological and chemical computation; metaprogramming.

- Declarative languages in artificial intelligence: logic programming; database
  languages; knowledge representation languages; probabilistic languages;
  differentiable languages.

- Implementations: abstract machines; interpreters; compilation; compile-time
  and run-time optimization; memory management.

- Foundations: types; logical frameworks; monads and effects; semantics.

- Analysis and Transformation: partial evaluation; abstract interpretation;
  control flow; data flow; information flow; termination analysis; resource
  analysis; type inference and type checking; verification; validation;
  debugging; testing.

- Tools and Applications: programming and proof environments; verification
  tools; case studies in proof assistants or interactive theorem provers;
  certification; novel applications of declarative programming inside and
  outside of CS; declarative programming pearls; practical experience reports
  and industrial application; education.

# Paper Submission 

Submissions can be made in three categories:

- Regular Research Papers,
- System Descriptions, and
- Experience Reports.

Submissions of Research Papers must present original research which is
unpublished and not submitted elsewhere. They must not exceed 12 pages ACM
style 2-column (including figures, but excluding bibliography). Work that
already appeared in unpublished or informally published workshop proceedings
may be submitted. Research papers will be judged on originality, significance,
correctness, clarity, and readability.

Submission of System Descriptions must describe a working system whose
description has not been published or submitted elsewhere. They must not exceed
10 pages and should contain a link to a working system. System Descriptions
must be marked as such at the time of submission and will be judged on
originality, significance, usefulness, clarity, and readability.

Submissions of Experience Reports are meant to help create a body of published,
refereed, citable evidence where declarative programming such as functional,
logic, answer-set, constraint programming, etc., is used in practice. They must
not exceed 5 pages **including references**. Experience Reports must be marked
as such at the time of submission and need not report original research
results. They will be judged on significance, usefulness, clarity, and
readability.

Possible topics for an Experience Report include, but are not limited to:

- insights gained from real-world projects using declarative programming

- comparison of declarative programming with conventional programming in the
  context of an industrial project or a university curriculum

- curricular issues encountered when using declarative programming in education

- real-world constraints that created special challenges for an implementation
  of a declarative language or for declarative programming in general

- novel use of declarative programming in the classroom

- programming pearl that illustrates a nifty new data structure or programming
  technique.

Supplementary material may be provided via a link to an extended version of the
submission (recommended), or in a clearly marked appendix beyond the above
mentioned page limits. Reviewers are not required to study extended versions or
any material beyond the respective page limit. Material beyond the page limit
will not be included in the final published version.

# Submission Guidelines

Submissions will be made via EasyChair. The submission webpage for PPDP 25 is
https://easychair.org/conferences/?conf=iclp25 (select PPDP track).

For each paper category, you must use the most recent version of the "Current
ACM Master Template" which is available at
(https://www.acm.org/publications/proceedings-template). You must use the LaTeX
sigconf proceedings template as the conference organizers are unable to process
final submissions in other formats.

Authors should note ACM's statement on author's rights
(http://authors.acm.org/) which apply to final papers. Submitted papers should
meet the requirements of ACM's plagiarism policy
(http://www.acm.org/publications/policies/plagiarism_policy).

# Note About the New ACM Open Access Model

ACM has introduced a new open access publishing model for the International
Conference Proceedings Series (ICPS). Authors based at institutions that are
not yet part of the ACM Open program and do not qualify for a waiver will be
required to pay an article processing charge (APC) to publish their ICPS
article in the ACM Digital Library. To determine whether or not an APC will be
applicable to your article, please follow the detailed guidance here:
https://www.acm.org/publications/icps/author-guidance.

Further information may be found on the ACM website, as follows:

Full details of the new ICPS publishing model: https://www.acm.org/publications/icps/faq
Full details of the ACM Open program: https://www.acm.org/publications/openaccess

Please direct all questions about the new model to icps-info@acm.org.


# Program Chairs

Małgorzata Biernacka (Institute of Computer Science, University of Wrocław, Poland)
Carlos Olarte (LIPN and University Sorbonne Paris Nord, France).

# Program Committee

Salvador Abreu (University of Évora, Portugal)
Sandra Alves (University of Porto, Portugal)
Roman Barták (Charles University, Czech Republic)
Alessandro Bruni (IT-University of Copenhagen, Denmark)
Moreno Falaschi (University of Siena, Italy)
Fabio Gaducci (University of Pisa, Italy)
Cinzia di Giusto (Université Côte d’Azur, France)
Michael Hanus (University of Kiel, Germany)
Thomas Hildebrandt (University of Copenhagen, Denmark)
Yukiyoshi Kameyama (University of Tsukuba, Japan). 
Delia Kesner (University Paris Cité, France)
Cosimo Laneve (University of Bologna, Italy)
Alberto Momigliano (University of Milan, Italy)
Ruben Rubio (Universidad Complutense de Madrid, Spain)
Claudio Sacerdoti Coen (University of Bologna, Italy)
Filip Sieczkowski (Heriot-Watt University, UK)
Bernardo Toninho (NOVA FCT and NOVA LINCS, Portugal)
Frank Valencia (LIX, École Polytechnique de Paris, France)
Germán Vidal (Universitat Politecnica de Valencia, Spain)
